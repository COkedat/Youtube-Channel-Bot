# .github/workflows/deploy.yml
name: Deploy YouTube Bot to EC2

on:
  push:
    branches:
      - main # main 브랜치에 push 될 때마다 이 워크플로우를 실행

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest # 이 워크플로우는 우분투 환경에서 실행됨

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 프로젝트 디렉토리 설정
            PROJECT_DIR="/home/${{ secrets.EC2_USERNAME }}/youtube-discord-bot"
            
            # 디렉토리가 없으면 클론
            if [ ! -d "$PROJECT_DIR" ]; then
              git clone https://github.com/${{ github.repository }}.git $PROJECT_DIR
            fi
            cd $PROJECT_DIR

            # 최신 코드로 업데이트
            git pull origin main

            # venv 생성
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi
            
            # venv에 라이브러리 설치
            ./venv/bin/python3 -m pip install -r requirements.txt
            
            # EnvironmentFile (.env) 생성 (sed 대신 사용)
            echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}" > $PROJECT_DIR/.env
            echo "DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}" >> $PROJECT_DIR/.env
            echo "TARGET_CHANNELS=${{ secrets.TARGET_CHANNELS }}" >> $PROJECT_DIR/.env
            
            # systemd 서비스 재시작
            #    EC2_USERNAME이 password 없이 sudo systemctl을 실행할 수 있어야 함
            sudo systemctl daemon-reload
            sudo systemctl restart youtube-bot.service
            
            # 서비스 상태 확인
            #    --no-pager : 스크립트가 멈추지 않게 함
            #    || true : 서비스가 잠시 FAILED여도 워크플로우가 실패하지 않게 함
            sleep 3 # 봇이 시작될 시간을 줌
            sudo systemctl status youtube-bot.service --no-pager || true
